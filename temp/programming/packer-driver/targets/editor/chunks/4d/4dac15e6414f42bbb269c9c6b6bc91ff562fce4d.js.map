{"version":3,"sources":["file:///D:/2work/2GameDev/EWasteScavengerSimulatorCocos2d/assets/Game/scripts-001/tabs/MenuSidebar.ts"],"names":["_decorator","Component","SpriteFrame","Prefab","Node","instantiate","TabCtrl","ccclass","property","MenuSidebar","curTabIdx","tabs","mainMenu","tabSwitchDuration","init","i","tabIcons","length","iconSF","tabParent","tabPrefab","tab","getComponent","container","addChild","node","sidebar","idx","turnBig","pos","highlight","position","setPosition","tabWidth","y","z","tabPressed","turnSmall","switchPanel"],"mappings":"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","sourcesContent":["import { _decorator, Component, SpriteFrame, Prefab, Node, instantiate } from \"cc\";\nimport { TabCtrl } from \"./TabCtrl\";\nimport { MainMenu } from \"./MainMenu\";\nconst { ccclass, property } = _decorator;\n\n@ccclass\nexport class MenuSidebar extends Component{\n    @property([SpriteFrame])\n    public tabIcons: SpriteFrame[] = [];\n    @property(Prefab)\n    public tabPrefab:Prefab | null = null;\n    @property(Node)\n    public container: Node | null = null;\n    @property(Node)\n    public highlight: Node | null = null;\n    @property\n    public tabWidth = 0;\n\n    public curTabIdx = -1;\n    public tabs: TabCtrl[] = [];\n    public mainMenu: MainMenu | null = null;\n    public tabSwitchDuration = -1;\n\n    // use this for initialization\n    init(mainMenu: MainMenu) {\n        this.mainMenu = mainMenu;\n        this.tabSwitchDuration = mainMenu.tabSwitchDuration;\n        this.curTabIdx = 0;\n        this.tabs = [];\n        for (let i = 0; i < this.tabIcons.length; ++i) {\n            let iconSF = this.tabIcons[i];\n            \n            // use '!' to ensure that this overload is being accessed: `export function instantiate(prefab: Prefab): Node`\n            let tabParent = instantiate(this.tabPrefab!);\n \n            let tab = tabParent.getComponent(TabCtrl)!;\n            this.container?.addChild(tab.node);-\n            tab.init({\n                sidebar: this,\n                idx: i,\n                iconSF: iconSF\n            });\n            this.tabs[i] = tab;\n        }\n        this.tabs[this.curTabIdx].turnBig();\n        const pos = this.highlight?.position;\n        if( pos != null ){\n            this.highlight?.setPosition(this.curTabIdx * this.tabWidth, pos.y, pos.z);\n        }        \n    }\n\n    tabPressed(idx: number) {\n        for (let i = 0; i < this.tabs.length; ++i) {\n            let tab = this.tabs[i];\n            if (tab.idx === idx) {\n                tab.turnBig();\n            } else if (this.curTabIdx === tab.idx) {\n                tab.turnSmall();\n            }\n        }\n        this.curTabIdx = idx;\n        // let highlightMove = cc.moveTo(this.tabSwitchDuration, cc.p(this.curTabIdx * this.tabWidth)).easing(cc.easeQuinticActionInOut());\n        // this.highlight.stopAllActions();\n        // this.highlight.runAction(highlightMove);\n        this.mainMenu?.switchPanel(this.curTabIdx);\n    }\n}\n"]}