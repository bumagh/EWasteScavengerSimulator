{"version":3,"sources":["file:///D:/2work/2GameDev/EWasteScavengerSimulatorCocos2d/assets/Libraries/EventManager.ts"],"names":["Event","EventManager","Debug","List","constructor","type","callback","target","On","list","events","has","set","get","Add","Off","Error","event","Find","item","undefined","Remove","Apply","onApply","any","Warn","tempEventArray","items","filter","apply","onCallbackApply","Emit","Broadcast","Map"],"mappings":"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","sourcesContent":["import { Debug } from \"./Debug\";\nimport { List } from \"./List\";\n\nexport class Event\n{\n    constructor(type: string, callback: (...any: any[]) => void, target?: unknown)\n    {\n        this.type = type;\n        this.callback = callback;\n        this.target = target;\n    }\n\n    public type: string;\n    public callback: (...any: any[]) => void;\n    public target: unknown;\n}\n\nexport class EventManager\n{\n    private static events = new Map<string, List<Event>>();\n    public static onCallbackApply: (type: string, ...any: any[]) => void = null;\n\n    public static On<TFunction extends (...any: any[]) => void>(type: string, callback: TFunction, target?: unknown)\n    {\n        var list: List<Event>;\n        if (!EventManager.events.has(type))\n        {\n            list = new List<Event>();\n            EventManager.events.set(type, list);\n        }\n        list = EventManager.events.get(type);\n        list.Add(new Event(type, callback, target));\n    }\n\n    public static Off<TFunction extends (...any: any[]) => void>(type: string, callback: TFunction, target?: unknown)\n    {\n        if (!EventManager.events.has(type))\n        {\n            Debug.Error(`注销事件时，未找到事件${type}`);\n            return;\n        }\n        var list: List<Event> = EventManager.events.get(type);\n        var event: Event = list.Find(item => item.callback === callback && item.target === target);\n        if (event != undefined)\n            list.Remove(event);\n        else\n            Debug.Error(`注销事件时，未找到事件${type}，目标为${target}`);\n    }\n\n    public static Apply(onApply: boolean, type: string, ...any: any[]): void\n    {\n        if (!EventManager.events.has(type))\n        {\n            Debug.Warn(`发送事件时，未找到事件${type}`);\n            return;\n        }\n        var list: List<Event> = EventManager.events.get(type);\n        // 将事件数组写入新的临时数组，防止事件在执行时改变原本的数组\n        var tempEventArray = list.items.filter(item => item != null);\n        for (var event of tempEventArray)\n        {\n            event.callback.apply(event.target, any);\n            if (onApply)\n                EventManager.onCallbackApply(type, ...any);\n        }\n    }\n\n    public static Emit(type: string, ...any: any[]): void\n    {\n        EventManager.Apply(false, type, ...any);\n    }\n\n    public static Broadcast(type: string, ...any: any[]): void\n    {\n        EventManager.Apply(true, type, ...any);\n    }\n}"]}