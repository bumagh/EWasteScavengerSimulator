{"version":3,"sources":["file:///D:/2work/2GameDev/EWasteScavengerSimulatorCocos2d/assets/Game/scripts-001/PanelTransition.ts"],"names":["_decorator","Component","Vec3","Color","UIRenderer","ccclass","property","PanelTransition","outOfWorld","_color","onLoad","node","setPosition","on","startFadeIn","setScale","renderComp","getComponent","set","color","a","onFadeOutFinish"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,U,OAAAA,U;;;;;;;;;OACvC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;iCAGjBO,e,GADZF,O,qBAAD,MACaE,eADb,SACqCN,SADrC,CAC+C;AAAA;AAAA;;AAAA;;AAAA,eAIpCO,UAJoC,GAIvB,IAAIN,IAAJ,EAJuB;AAAA,eAMnCO,MANmC,GAM1B,IAAIN,KAAJ,EAN0B;AAAA;;AAQ1C;AACDO,QAAAA,MAAM,GAAG;AACL,eAAKF,UAAL,GAAkB,IAAIN,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAlB;AACA,eAAKS,IAAL,CAAUC,WAAV,CAAsB,KAAKJ,UAA3B,EAFK,CAGL;AACA;AACA;AACA;;AACA,eAAKG,IAAL,CAAUE,EAAV,CAAa,SAAb,EAAwB,KAAKC,WAA7B,EAA0C,IAA1C;AACH;;AAEDA,QAAAA,WAAW,GAAG;AACV,eAAKH,IAAL,CAAUC,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B;AACA,eAAKD,IAAL,CAAUI,QAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB;AACA,gBAAMC,UAAU,GAAG,KAAKL,IAAL,CAAUM,YAAV,CAAuBb,UAAvB,CAAnB;;AACA,eAAKK,MAAL,CAAYS,GAAZ,CAAgBF,UAAU,CAACG,KAA3B;;AACA,eAAKV,MAAL,CAAYW,CAAZ,GAAgB,CAAhB;AACAJ,UAAAA,UAAU,CAACG,KAAX,GAAmB,KAAKV,MAAxB,CANU,CAOV;AACH;;AAEDY,QAAAA,eAAe,GAAG;AACd,eAAKV,IAAL,CAAUC,WAAV,CAAsB,KAAKJ,UAA3B;AACH;;AA/B0C,O,2EAC1CF,Q;;;;;iBACiB,C","sourcesContent":["import { _decorator, Component, Vec3, Color, UIRenderer } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass\nexport class PanelTransition extends Component {\n    @property\n    public duration = 0;\n\n    public outOfWorld = new Vec3();\n\n    private _color = new Color();\n\n     // use this for initialization\n    onLoad() {\n        this.outOfWorld = new Vec3(3000, 0, 0);\n        this.node.setPosition(this.outOfWorld);\n        // let cbFadeOut = cc.callFunc(this.onFadeOutFinish, this);\n        // let cbFadeIn = cc.callFunc(this.onFadeInFinish, this);\n        // this.actionFadeIn = cc.sequence(cc.spawn(cc.fadeTo(this.duration, 255), cc.scaleTo(this.duration, 1.0)), cbFadeIn);\n        // this.actionFadeOut = cc.sequence(cc.spawn(cc.fadeTo(this.duration, 0), cc.scaleTo(this.duration, 2.0)), cbFadeOut);\n        this.node.on('fade-in', this.startFadeIn, this);\n    }\n\n    startFadeIn() {\n        this.node.setPosition(0, 0, 0);\n        this.node.setScale(2, 2, 2);\n        const renderComp = this.node.getComponent(UIRenderer)!;\n        this._color.set(renderComp.color);\n        this._color.a = 0;\n        renderComp.color = this._color;\n        // this.node.runAction(this.actionFadeIn);\n    }\n\n    onFadeOutFinish() {\n        this.node.setPosition(this.outOfWorld);\n    }\n}\n"]}