{"version":3,"sources":["file:///D:/2work/2GameDev/EWasteScavengerSimulatorCocos2d/assets/Game/Scripts/Game/GameUICtrl.ts"],"names":["_decorator","Camera","instantiate","Prefab","tween","Vec3","NodeRef","Ball","Outline","Algorithm","ccclass","property","GameUICtrl","heroBall","centerPointNode","camera","centerPointLocalToBallPos","onLoad","GetVisual","GetNode","start","convertToUINode","worldPosition","node","MiniCamera","scale","to","orthoHeight","UpdateBallPos","BallBeat","centerPos","ballSpriteNode","position","x","y","direction","subtract","normalize","multiplyScalar","UpdateBallScore","UpdateTipScore","UpdateBallScale","CreateOutline","outlineNode","outlinePrefab","name","addChild","outline","getComponent","SetSpriteNodeScale","SetNodeAngle","SetOutlineSpriteRotateSpeed","GetRandomNumber"],"mappings":"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","sourcesContent":["import { _decorator, Camera, Component, easing, instantiate, Node, Prefab, tween, Vec2, Vec3 } from 'cc';\nimport { NodeRef } from '../Common/NodeRef';\nimport { Ball } from './Ball';\nimport { Outline } from './Outline';\nimport { Debug } from '../../../Libraries/Debug';\nimport { Algorithm } from '../../../Libraries/Algorithm';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameUICtrl')\nexport class GameUICtrl extends NodeRef\n{\n\n    @property(Prefab)\n    private outlinePrefab: Prefab;\n    private heroBall: Ball;\n    private centerPointNode: Node;\n    private camera: Camera;\n    private centerPointLocalToBallPos: Vec3 = new Vec3();\n    protected onLoad(): void\n    {\n        this.heroBall = this.GetVisual(\"GameRoot/Ball\", Ball);\n        this.camera = this.GetVisual(\"Camera\", Camera);\n        this.centerPointNode = this.GetNode(\"GameRoot/CenterPoint\")\n    }\n    start()\n    {\n        this.centerPointLocalToBallPos = this.camera.convertToUINode(this.centerPointNode.worldPosition, this.heroBall.node)\n\n    }\n    public MiniCamera(scale: number = 2)\n    {\n        // this.camera.orthoHeight = this.camera.orthoHeight * scale;\n        tween(this.camera)\n            .to(1, { orthoHeight: this.camera.orthoHeight * scale }, { 'easing': 'smooth' })\n            .to(1, { orthoHeight: this.camera.orthoHeight }, { 'easing': 'smooth' })\n            .start();\n    }\n    public UpdateBallPos()\n    {\n        this.heroBall.UpdateBallPos();\n    }\n    public BallBeat()\n    {\n        const centerPos = new Vec3(this.heroBall.ballSpriteNode.position.x, this.heroBall.ballSpriteNode.position.y);\n        const direction =centerPos.subtract(this.centerPointLocalToBallPos).normalize();\n\n        this.heroBall.BallBeat(direction.multiplyScalar(10));\n    }\n    public UpdateBallScore()\n    {\n        this.heroBall.UpdateTipScore();\n    }\n    public UpdateBallScale()\n    {\n        this.heroBall.UpdateBallScale();\n    }\n    public CreateOutline(scale: number = 1)\n    {\n        var outlineNode: Node = instantiate(this.outlinePrefab);\n        outlineNode.name = \"Outline\"+scale;\n        this.GetNode(\"GameRoot\").addChild(outlineNode);\n        var outline: Outline = outlineNode.getComponent<Outline>(Outline);\n        outline.scale = scale;\n        outline.SetSpriteNodeScale(scale);\n        outline.SetNodeAngle();\n        outline.SetOutlineSpriteRotateSpeed(Algorithm.GetRandomNumber(3,0.5))\n        // outline.level = Math.round(scale);\n    }\n}\n\n\n"]}