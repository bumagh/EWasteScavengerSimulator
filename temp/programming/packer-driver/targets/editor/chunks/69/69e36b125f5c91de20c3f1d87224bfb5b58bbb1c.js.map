{"version":3,"sources":["file:///D:/2work/2GameDev/EWasteScavengerSimulatorCocos2d/assets/Game/scripts-001/EnergyCounter.ts"],"names":["_decorator","Component","Label","ProgressBar","ccclass","property","EnergyCounter","type","_timer","onLoad","update","dt","ratio","timeToRecover","progressBar","progress","currentCount","totalCount","timeLeft","Math","floor","labelCount","string","labelTimer","toString"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,W,OAAAA,W;;;;;;;;;OACjC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;+BAGjBM,a,WAORD,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEL;AADA,OAAD,C,UAIRG,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEL;AADA,OAAD,C,UAIRG,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEJ;AADA,OAAD,C,EAhBZC,O,qBAAD,MACaE,aADb,SACmCL,SADnC,CAC4C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAoBhCO,MApBgC,GAoBvB,CApBuB;AAAA;;AAsBxCC,QAAAA,MAAM,GAAG;AACL,eAAKD,MAAL,GAAc,CAAd;AACH;;AAEDE,QAAAA,MAAM,CAACC,EAAD,EAAa;AACf,cAAIC,KAAK,GAAG,KAAKJ,MAAL,GAAc,KAAKK,aAA/B;AACA,eAAKC,WAAL,CAAiBC,QAAjB,GAA4BH,KAA5B;AACA,cAAI,KAAKI,YAAL,GAAoB,KAAKC,UAA7B,EAAyC,KAAKD,YAAL,GAAoB,KAAKC,UAAzB;AACzC,cAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKP,aAAL,GAAqB,KAAKL,MAArC,CAAf;AACA,eAAKa,UAAL,CAAgBC,MAAhB,GAAyB,KAAKN,YAAL,GAAoB,GAApB,GAA0B,KAAKC,UAAxD;AACA,eAAKM,UAAL,CAAgBD,MAAhB,GAAyBH,IAAI,CAACC,KAAL,CAAWF,QAAQ,GAAG,EAAtB,EAA0BM,QAA1B,KAAuC,GAAvC,IAA8CN,QAAQ,GAAG,EAAX,GAAgB,EAAhB,GAAqB,GAArB,GAA2B,EAAzE,IAA+EA,QAAQ,GAAG,EAAnH;AACA,eAAKV,MAAL,IAAeG,EAAf;;AACA,cAAI,KAAKH,MAAL,IAAe,KAAKK,aAAxB,EAAuC;AACnC,iBAAKL,MAAL,GAAc,CAAd;AACA,iBAAKQ,YAAL;AACH;AACJ;;AAtCuC,O,gFACvCX,Q;;;;;iBACsB,C;;qFACtBA,Q;;;;;iBACmB,C;;uFACnBA,Q;;;;;iBACqB,C;;;;;;;iBAIF,I;;;;;;;iBAIA,I;;;;;;;iBAIO,I","sourcesContent":["import { _decorator, Component, Label, ProgressBar } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass\nexport class EnergyCounter extends Component{\n    @property\n    public timeToRecover = 0;\n    @property\n    public totalCount = 0;\n    @property\n    public currentCount = 0;\n    @property({\n        type: Label\n    })\n    labelTimer: Label = null!;\n    @property({\n        type: Label\n    })\n    labelCount: Label = null!;\n    @property({\n        type: ProgressBar\n    })\n    progressBar: ProgressBar = null!;\n\n    private _timer = 0;\n\n    onLoad() {\n        this._timer = 0;\n    }\n\n    update(dt: number) {\n        let ratio = this._timer / this.timeToRecover;\n        this.progressBar.progress = ratio;\n        if (this.currentCount > this.totalCount) this.currentCount = this.totalCount;\n        let timeLeft = Math.floor(this.timeToRecover - this._timer);\n        this.labelCount.string = this.currentCount + '/' + this.totalCount;\n        this.labelTimer.string = Math.floor(timeLeft / 60).toString() + ':' + (timeLeft % 60 < 10 ? '0' : '') + timeLeft % 60;\n        this._timer += dt;\n        if (this._timer >= this.timeToRecover) {\n            this._timer = 0;\n            this.currentCount++;\n        }\n    }\n}\n"]}