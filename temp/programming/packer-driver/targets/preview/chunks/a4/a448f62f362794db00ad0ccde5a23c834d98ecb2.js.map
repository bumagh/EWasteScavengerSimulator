{"version":3,"sources":["file:///D:/2work/2GameDev/EWasteScavengerSimulatorCocos2d/assets/Game/scripts-001/rocker/rockerCtrl.ts"],"names":["_decorator","Component","Node","Vec2","Vec3","Animation","Input","input","ccclass","property","TOUCH_RADIUS","ROLE_MOVE_FRAME","_tempPos","_tempDelta","Horizontal","MOVE_DELTA","RockerCtrl","_isTouch","_touchPos","_startPos","_movePos","_animComp","_animState","start","ctrlSprite","setPosition","originPos","set","role","eulerAngles","getComponentInChildren","on","EventType","TOUCH_START","touchStart","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd","onDestroy","off","touch","changeState","getUILocation","distance","length","position","setWorldPosition","x","y","z","subtract","deltaRadian","angle","Math","PI","rot","sign","multiply2f","add","radian","cos","sin","name","play","update","translate"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec2, Vec3, Animation, Input, input, EventTouch } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n// 操作半径\nconst TOUCH_RADIUS = 400;\nconst ROLE_MOVE_FRAME = 0.2;\nconst _tempPos = new Vec3();\nconst _tempDelta = new Vec2();\nconst Horizontal = new Vec2(1, 0);\nconst MOVE_DELTA = 0.2;\n\n@ccclass(\"RockerCtrl\")\nexport class RockerCtrl extends Component {\n    @property(Node)\n    ctrlSprite: Node = null!;\n    @property(Node)\n    role: Node = null!;\n    @property(Vec3)\n    originPos = new Vec3();\n\n    private _isTouch = false;\n    private _touchPos = new Vec2();\n    private _startPos = new Vec2();\n    private _movePos = new Vec2();\n    private _animComp: Animation = null!;\n    private _animState = 'idle';\n\n    start () {\n        this.ctrlSprite.setPosition(this.originPos);\n        _tempPos.set(0, 90, 0);\n        this.role.eulerAngles = _tempPos;\n        this._animComp = this.role.getComponentInChildren(Animation)!;\n        input.on(Input.EventType.TOUCH_START, this.touchStart, this);\n        input.on(Input.EventType.TOUCH_MOVE, this.touchMove, this);\n        input.on(Input.EventType.TOUCH_END, this.touchEnd, this);\n    }\n\n    onDestroy() {\n        input.off(Input.EventType.TOUCH_START, this.touchStart, this);\n        input.off(Input.EventType.TOUCH_MOVE, this.touchMove, this);\n        input.off(Input.EventType.TOUCH_END, this.touchEnd, this);\n    }\n\n    touchStart(touch: EventTouch){\n        this.changeState('cocos_anim_run');\n        touch.getUILocation(this._startPos);\n        const distance = this._startPos.length();\n        if (distance < TOUCH_RADIUS) {\n            this._touchPos.set(this._startPos);\n            this._movePos.set(this._startPos);\n            _tempPos.set(this.ctrlSprite.position);\n            this.ctrlSprite.setWorldPosition(this._startPos.x, this._startPos.y, _tempPos.z);\n            this._isTouch = true;\n        }\n    }\n\n    touchMove(touch: EventTouch){\n        if(!this._isTouch){\n            return;\n        }\n\n        touch.getUILocation(this._movePos);\n        Vec2.subtract(_tempDelta, this._movePos, this._touchPos);\n        // 计算角色的整体旋转值\n        const deltaRadian = _tempDelta.angle(Horizontal);\n        const angle = deltaRadian * 180 / Math.PI;\n        const rot = this.role.eulerAngles;\n        _tempPos.set(rot.x, 90 + (Math.sign(_tempDelta.y)) * angle, rot.z);\n        this.role.eulerAngles = _tempPos;\n\n        // 重新规划移动方向值\n        _tempDelta.multiply2f(MOVE_DELTA, MOVE_DELTA);\n        Vec2.add(this._movePos, this._startPos, _tempDelta);\n        const distance = this._movePos.length();\n\n        // 是否超出限制半径\n        if(distance > TOUCH_RADIUS){\n            const radian = this._movePos.angle(Horizontal);\n            const x = Math.cos(radian) * TOUCH_RADIUS;\n            const y = Math.sin(radian) * TOUCH_RADIUS;\n            this._movePos.set(x, y);\n        }\n\n        this.ctrlSprite.setWorldPosition(this._movePos.x, this._movePos.y, 0);\n        this._touchPos.set(this._movePos);\n    }\n\n    touchEnd(touch: EventTouch){\n        this._isTouch = false;\n        this.changeState('cocos_anim_idle');\n        this.ctrlSprite.setPosition(this.originPos);\n    }\n\n    changeState(name: string){\n        if(this._animState === name){\n            return;\n        }\n\n        this._animComp.play(name);\n        this._animState = name;\n    }\n\n    update(){\n        if(!this._isTouch){\n            return;\n        }\n\n        _tempPos.set(0, 0, ROLE_MOVE_FRAME);\n        this.role.translate(_tempPos);\n    }\n}\n"]}