{"version":3,"sources":["file:///D:/2work/2GameDev/EWasteScavengerSimulatorCocos2d/assets/Game/scripts-001/rocker/head-scale.ts"],"names":["_decorator","Component","Node","Vec3","Camera","ccclass","property","HeadScale","_lastWPos","_pos","update","wpos","target","worldPosition","camera","_camera","equals","set","convertToUINode","node","parent","setPosition","transformMat4","matView","ratio","distance","Math","abs","z","value","floor","setScale"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAA2BC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;;;;;;;;;OAC3D;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;2BAGjBO,S,WADZF,OAAO,CAAC,WAAD,C,UAEHC,QAAQ,CAACJ,IAAD,C,UAERI,QAAQ,CAACF,MAAD,C,2BAJb,MACaG,SADb,SAC+BN,SAD/B,CACyC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAQ7BO,SAR6B,GAQX,IAAIL,IAAJ,EARW;AAAA,eAS7BM,IAT6B,GAShB,IAAIN,IAAJ,EATgB;AAAA;;AAWrCO,QAAAA,MAAM,GAAE;AACJ,cAAMC,IAAI,GAAG,KAAKC,MAAL,CAAYC,aAAzB,CADI,CAEJ;;AACA,cAAI,CAAC,KAAKC,MAAL,CAAaC,OAAd,IAAyB,KAAKP,SAAL,CAAeQ,MAAf,CAAsBL,IAAtB,CAA7B,EAA0D;AACtD;AACH;;AAED,eAAKH,SAAL,CAAeS,GAAf,CAAmBN,IAAnB;;AACA,cAAMG,MAAM,GAAG,KAAKA,MAApB,CARI,CASJ;AACA;;AACAA,UAAAA,MAAM,CAACC,OAAP,CAAeL,MAAf;;AACAI,UAAAA,MAAM,CAACI,eAAP,CAAuBP,IAAvB,EAA6B,KAAKQ,IAAL,CAAUC,MAAvC,EAAgD,KAAKX,IAArD;AACA,eAAKU,IAAL,CAAUE,WAAV,CAAsB,KAAKZ,IAA3B,EAbI,CAcJ;;AACAN,UAAAA,IAAI,CAACmB,aAAL,CAAmB,KAAKb,IAAxB,EAA8B,KAAKG,MAAL,CAAYC,aAA1C,EAAyDC,MAAM,CAACC,OAAP,CAAgBQ,OAAzE;AAEA,cAAMC,KAAK,GAAG,KAAKC,QAAL,GAAgBC,IAAI,CAACC,GAAL,CAAS,KAAKlB,IAAL,CAAUmB,CAAnB,CAA9B;AAEA,cAAMC,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAWN,KAAK,GAAG,GAAnB,IAA0B,GAAxC;AACA,eAAKL,IAAL,CAAUY,QAAV,CAAmBF,KAAnB,EAA0BA,KAA1B,EAAiC,CAAjC;AACH;;AAhCoC,O;;;;;iBAEtB,I;;;;;;;iBAEE,I;;mFAChBvB,Q;;;;;iBACU,C","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, Vec3, Camera } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"HeadScale\")\nexport class HeadScale extends Component {\n    @property(Node)\n    target: Node = null!;\n    @property(Camera)\n    camera: Camera = null!;\n    @property\n    distance = 0;\n\n    private _lastWPos: Vec3 = new Vec3();\n    private _pos: Vec3 = new Vec3();\n\n    update(){\n        const wpos = this.target.worldPosition;\n        // @ts-ignore\n        if (!this.camera!._camera || this._lastWPos.equals(wpos)) {\n            return;\n        }\n\n        this._lastWPos.set(wpos);\n        const camera = this.camera!;\n        // [HACK]\n        // @ts-ignore\n        camera._camera.update();\n        camera.convertToUINode(wpos, this.node.parent!, this._pos);\n        this.node.setPosition(this._pos);\n        // @ts-ignore\n        Vec3.transformMat4(this._pos, this.target.worldPosition, camera._camera!.matView);\n\n        const ratio = this.distance / Math.abs(this._pos.z);\n\n        const value = Math.floor(ratio * 100) / 100;\n        this.node.setScale(value, value, 1);\n    }\n}\n"]}