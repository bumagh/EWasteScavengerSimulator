{"version":3,"sources":["file:///D:/2work/2GameDev/EWasteScavengerSimulatorCocos2d/assets/Game/Scripts/Game/Ball.ts"],"names":["_decorator","Label","RigidBody2D","Vec2","Vec3","NodeRef","ccclass","property","Ball","ballSpriteNode","rgBody","tipLabel","_score","angle","speed","radius","score","value","onLoad","GetNode","GetVisual","start","UpdateTipScore","scoreNum","string","toString","update","deltaTime","updateTextPosition","BallBeat","vec3","point","getLocalCenter","applyLinearImpulse","x","y","UpdateBallScale","node","setScale","scale","gravityScale","UpdateBallPos","position","pos","setPosition"],"mappings":"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","sourcesContent":["import { _decorator, Camera, Component, find, Label, Node, NodeSpace, Quat, RigidBody2D, tween, Vec2, Vec3 } from 'cc';\nimport { NodeRef } from '../Common/NodeRef';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Ball')\nexport class Ball extends NodeRef\n{\n    public ballSpriteNode: Node;\n    private rgBody: RigidBody2D;\n    private tipLabel: Label;\n    private _score: number = -1;\n    private angle: number = 0; // 当前角度\n    private speed: number = 30; // 当前角度\n    private radius: number = 2; // 当前角度\n\n    public get score(): number\n    {\n        return this._score;\n    }\n    public set score(value: number)\n    {\n        this._score = value;\n    }\n    protected onLoad(): void\n    {\n        this.ballSpriteNode = this.GetNode(\"Sprite\");\n        this.rgBody = this.GetVisual(\"Sprite\", RigidBody2D);\n        this.tipLabel = this.GetVisual(\"Label\", Label);\n    }\n    start()\n    {\n        this.UpdateTipScore();\n    }\n\n    public UpdateTipScore(scoreNum: number = 0)\n    {\n        this.score = scoreNum == 0 ? (this.score + 1) : scoreNum;\n        this.tipLabel.string = `1:${this.score.toString()}分`;\n    }\n    update(deltaTime: number)\n    {\n        this.updateTextPosition();\n        // this.angle += this.speed * deltaTime;\n\n        // // 计算刚体的目标位置（圆周运动轨迹上的点）\n        // const targetPosition = new Vec2(this.radius * Math.cos(this.angle), this.radius * Math.sin(this.angle)\n        // );\n\n        // // 计算朝向圆心的向量\n        // const direction = targetPosition.subtract(new Vec2(this.ballSpriteNode.position.x, this.ballSpriteNode.position.y)).normalize();\n\n        // // 计算冲量大小（使刚体保持圆周运动）\n        // const impulseMagnitude = this.rgBody.getMass() * this.speed * this.radius;\n\n        // // 应用冲量给刚体\n        // this.rgBody.applyLinearImpulse(direction.multiplyScalar(impulseMagnitude), new Vec2(this.ballSpriteNode.position.x, this.ballSpriteNode.position.y), true);\n        // find(\"Canvas/Camera\").getComponent<Camera>(Camera).conve\n\n    }\n    public BallBeat(vec3: Vec3): void\n    {\n        var point = new Vec2();\n        this.rgBody.getLocalCenter(point);\n        // this.rgBody.applyLinearImpulse(new Vec2(0, 10 * this.node.scale.x), point, true);\n        this.rgBody.applyLinearImpulse(new Vec2(vec3.x, vec3.y), point, true);\n    }\n    public UpdateBallScale()\n    {\n        // this.ballSpriteNode.setScale(new Vec3(this.ballSpriteNode.scale.x*1.5,));\n        this.node.setScale(new Vec3(this.node.scale.x * 2, this.node.scale.y * 2, 1));\n        this.rgBody.gravityScale = this.rgBody.gravityScale / (2);\n    }\n    public UpdateBallPos()\n    {\n        this.ballSpriteNode.position = new Vec3(0, 0, 0);\n    }\n    updateTextPosition()\n    {\n        // 获取目标节点的世界坐标\n        const pos = new Vec3(this.ballSpriteNode.position.x, this.ballSpriteNode.position.y + 30, 0);\n        // 将目标节点的世界坐标转换为文本节点的局部坐标\n        // 更新文本节点的位置\n        this.tipLabel.node.setPosition(pos);\n    }\n\n}\n\n\n\n\n"]}