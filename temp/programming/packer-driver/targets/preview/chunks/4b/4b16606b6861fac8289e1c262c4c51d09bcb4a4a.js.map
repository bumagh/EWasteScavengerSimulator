{"version":3,"sources":["file:///D:/2work/2GameDev/EWasteScavengerSimulatorCocos2d/assets/Game/Scripts/Game/GameCtrl.ts"],"names":["_decorator","Component","GameUICtrl","EventManager","Debug","ccclass","property","GameCtrl","nextScale","level","onLoad","On","OnGameTouched","OnBallLeaveDoor","onDestroy","Off","start","gameUICtrl","CreateOutline","node","selfCollider","otherCollider","contact","scheduleOnce","UpdateBallPos","UpdateBallScore","MiniCamera","proxy","event","eventArg","Log","BallBeat"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAwBC,MAAAA,S,OAAAA,S;;AAExBC,MAAAA,U,iBAAAA,U;;AAEAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,K,iBAAAA,K;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;0BAGjBO,Q,WADZF,OAAO,CAAC,UAAD,C,UAGHC,QAAQ;AAAA;AAAA,mC,2BAHb,MACaC,QADb,SAC8BN,SAD9B,CAEA;AAAA;AAAA;;AAAA;;AAAA,eAGYO,SAHZ,GAGgC,CAHhC;AAAA,eAIWC,KAJX,GAI2B,CAJ3B;AAAA;;AAKcC,QAAAA,MAAM,GAChB;AACI;AAAA;AAAA,4CAAaC,EAAb,CAAgB,eAAhB,EAAiC,KAAKC,aAAtC,EAAqD,IAArD;AACA;AAAA;AAAA,4CAAaD,EAAb,CAAgB,iBAAhB,EAAmC,KAAKE,eAAxC,EAAyD,IAAzD;AACH;;AACSC,QAAAA,SAAS,GACnB;AACI;AAAA;AAAA,4CAAaC,GAAb,CAAiB,eAAjB,EAAkC,KAAKH,aAAvC,EAAsD,IAAtD;AACA;AAAA;AAAA,4CAAaG,GAAb,CAAiB,iBAAjB,EAAoC,KAAKF,eAAzC,EAA0D,IAA1D;AACH;;AACDG,QAAAA,KAAK,GACL;AACI,eAAKC,UAAL,CAAgBC,aAAhB,CAA8B,CAA9B;AACA,eAAKD,UAAL,CAAgBC,aAAhB,CAA8B,CAA9B;AACA,eAAKD,UAAL,CAAgBC,aAAhB,CAA8B,CAA9B;AACH;AAED;AACJ;AACA;;;AACYL,QAAAA,eAAe,CAACM,IAAD,EAAaC,YAAb,EAAuCC,aAAvC,EAAkEC,OAAlE,EACvB;AACI;AAEA,eAAKC,YAAL,CAAkB,MAClB;AACI,iBAAKd,KAAL,GAAa,KAAKA,KAAL,GAAa,CAA1B;AACA,iBAAKQ,UAAL,CAAgBO,aAAhB,GAFJ,CAII;;AACA,iBAAKP,UAAL,CAAgBQ,eAAhB;AACA,iBAAKjB,SAAL,GAAiB,KAAKA,SAAL,GAAiB,CAAlC,CANJ,CAOI;;AACA,iBAAKS,UAAL,CAAgBS,UAAhB;;AACA,gBAAI,KAAKjB,KAAL,GAAa,CAAb,IAAkB,CAAtB,EACA;AACI;AACA,mBAAKQ,UAAL,CAAgBC,aAAhB,CAA8B,CAA9B;AACA,mBAAKD,UAAL,CAAgBC,aAAhB,CAA8B,CAA9B;AACH;AACJ,WAhBD;AAiBH;;AACON,QAAAA,aAAa,CAACe,KAAD,EAAyBC,KAAzB,EACrB;AACI,kBAAQD,KAAK,CAACE,QAAd;AAEI,iBAAK,YAAL;AACI;AAAA;AAAA,kCAAMC,GAAN,CAAU,WAAV;AACA;;AACJ,iBAAK,WAAL;AACI;AAAA;AAAA,kCAAMA,GAAN,CAAU,UAAV;AACA;;AACJ,iBAAK,aAAL;AAEI;;AAEJ;AACI;AAbR;;AAeA,eAAKb,UAAL,CAAgBc,QAAhB;AACH;;AAjEL,O","sourcesContent":["import { _decorator, Collider2D, Component, EventTouch, IPhysics2DContact, Node } from 'cc';\nimport { TouchEventProxy } from '../Common/TouchEventProxy';\nimport { GameUICtrl } from './GameUICtrl';\nimport { Ball } from './Ball';\nimport { EventManager } from '../../../Libraries/EventManager';\nimport { Debug } from '../../../Libraries/Debug';\nimport { Outline } from './Outline';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameCtrl')\nexport class GameCtrl extends Component\n{\n    @property(GameUICtrl)\n    private gameUICtrl: GameUICtrl;\n    private nextScale: number = 4;\n    public level: number = 1;\n    protected onLoad(): void\n    {\n        EventManager.On(\"OnGameTouched\", this.OnGameTouched, this);\n        EventManager.On(\"OnBallLeaveDoor\", this.OnBallLeaveDoor, this);\n    }\n    protected onDestroy(): void\n    {\n        EventManager.Off(\"OnGameTouched\", this.OnGameTouched, this);\n        EventManager.Off(\"OnBallLeaveDoor\", this.OnBallLeaveDoor, this);\n    }\n    start()\n    {\n        this.gameUICtrl.CreateOutline(1);\n        this.gameUICtrl.CreateOutline(2);\n        this.gameUICtrl.CreateOutline(4);\n    }\n\n    /**\n     * 顺利从圈里出来\n     */\n    private OnBallLeaveDoor(node: Node, selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null)\n    {\n        //todo 音效 分数 生成新的圈 球增大 相机变远\n\n        this.scheduleOnce(() =>\n        {\n            this.level = this.level + 1;\n            this.gameUICtrl.UpdateBallPos();\n\n            // this.gameUICtrl.UpdateBallScale();\n            this.gameUICtrl.UpdateBallScore();\n            this.nextScale = this.nextScale * 2;\n            // this.gameUICtrl.CreateOutline(this.nextScale);\n            this.gameUICtrl.MiniCamera();\n            if (this.level % 3 == 0)\n            {\n                //生成新的\n                this.gameUICtrl.CreateOutline(1);\n                this.gameUICtrl.CreateOutline(2);\n            }\n        });\n    }\n    private OnGameTouched(proxy: TouchEventProxy, event: EventTouch)\n    {\n        switch (proxy.eventArg)\n        {\n            case 'touch-move':\n                Debug.Log(\"touchmove\")\n                break;\n            case 'touch-end':\n                Debug.Log(\"touchend\")\n                break;\n            case 'touch-start':\n\n                break;\n\n            default:\n                break;\n        }\n        this.gameUICtrl.BallBeat();\n    }\n}\n\n\n"]}